/* Copyright 2017 Braintrust Interactive, PresellCrusher.com  email: support@PresellCrusher.com */

// set up tab focus/blur event handling
if (typeof document.hidden !== "undefined") {
    hidden = "hidden";
    visibilityChange = "visibilitychange";
    state = "visibilityState";
} else if (typeof document.mozHidden !== "undefined") {
    hidden = "mozHidden";
    visibilityChange = "mozvisibilitychange";
    state = "mozVisibilityState";
} else if (typeof document.msHidden !== "undefined") {
    hidden = "msHidden";
    visibilityChange = "msvisibilitychange";
    state = "msVisibilityState";
} else if (typeof document.webkitHidden !== "undefined") {
    hidden = "webkitHidden";
    visibilityChange = "webkitvisibilitychange";
    state = "webkitVisibilityState";
}

// timer function
var javascript_countdown = function(){
  var time_left = 10; //number of seconds for countdown
  var keep_counting = 1;
  function countdown() {
    if(time_left < 2) {
      keep_counting = 0;
    }
    time_left = time_left - 1;
  }
  function add_leading_zero( n ) {
    if(n.toString().length < 2) {
      return '0' + n;
    } else {
      return n;
    }
  }
  function format_output() {
    var hours, minutes, seconds;
    seconds = time_left % 60;
    minutes = Math.floor(time_left / 60) % 60;
    hours = Math.floor(time_left / 3600);
    seconds = add_leading_zero( seconds );
    minutes = add_leading_zero( minutes );
    hours = add_leading_zero( hours );
    return minutes + minutesTxt + seconds + secondsTxt;
  }
  function show_time_left() {
    $('#timer').html(format_output());
  }
  function no_time_left() {
    $('#timer').html(noTimeLeft);
    if($('#surveyAgree').length > 0){
        setTimeout(function(){
            if(popWin){
                window.open($('#surveyAgree').attr('href'));
            } else {
                document.location = $('#surveyAgree').attr('href');
            }
        },parseInt(redirTime));
    }
  }
  return {
    count: function () {
      countdown();
      show_time_left();
    },
    timer: function () {
      javascript_countdown.count();
      if(keep_counting) {
        setTimeout("javascript_countdown.timer();", 1000);
      } else {
        no_time_left();
      }
    },
    init: function (n) {
      time_left = n;
      javascript_countdown.timer();
    }
  };
}();

function topo() {
    // Handler for .ready() called.
    $('html, body').animate({
        scrollTop: $('#surveyBox').offset().top
        }, 'slow');
    }

function getQueryParams(qs) {
    qs = qs.split("+").join(" ");
    /* use if you want an object
    var params = {}, tokens,
        re = /[?&]?([^=]+)=([^&]*)/g;
    while (tokens = re.exec(qs)) {
        params[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);
    }
    */
    var params = [], tokens,
        re = /[?&]?([^=]+)=([^&]*)/g;
    while (tokens = re.exec(qs)) {
        params.push({'key': tokens[1], 'val': tokens[2] });
    }
    return params;
}
var query = getQueryParams(document.location.search);

function processSubIds(){
    subIds = String(document.location.search).replace('?','');
    if(passSubIds == '1' && subIds != ''){
        $('.stepButton').each(function(){
            $this = $(this);
            if($this.attr('href') != ''){
                subIdString = ($this.attr('href').indexOf('?') <= 0)? '?'+subIds : '&'+subIds;
                $this.attr('href',$this.attr('href')+subIdString);
            }
        });
        cpaUrl += (cpaUrl.indexOf('?') <= 0)? '?'+subIds : '&'+subIds;
    }
}

// Simulates PHP's date function
Date.prototype.format = function(format) {
    var returnStr = '';
    var replace = Date.replaceChars;
    for (var i = 0; i < format.length; i++) {
        var curChar = format.charAt(i);
        if(i - 1 >= 0 && format.charAt(i - 1) == "\\"){
            returnStr += curChar;
        } else if(replace[curChar]){
            returnStr += replace[curChar].call(this);
        } else if(curChar != "\\"){
            returnStr += curChar;
        }
    }
    return returnStr;
};

Date.replaceChars = {
    shortMonths: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
    longMonths: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
    shortDays: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
    longDays: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],

    // Day
    d: function() { return (this.getDate() < 10 ? '0' : '') + this.getDate(); },
    D: function() { return Date.replaceChars.shortDays[this.getDay()]; },
    j: function() { return this.getDate(); },
    l: function() { return Date.replaceChars.longDays[this.getDay()]; },
    //N: function() { return this.getDay() + 1; },
    S: function() { return (this.getDate() % 10 == 1 && this.getDate() != 11 ? 'st' : (this.getDate() % 10 == 2 && this.getDate() != 12 ? 'nd' : (this.getDate() % 10 == 3 && this.getDate() != 13 ? 'rd' : 'th'))); },
    //w: function() { return this.getDay(); },
    //z: function() { var d = new Date(this.getFullYear(),0,1); return Math.ceil((this - d) / 86400000); },
    // Week
    //W: function() { var d = new Date(this.getFullYear(), 0, 1); return Math.ceil((((this - d) / 86400000) + d.getDay() + 1) / 7); },

    // Month
    F: function() { return Date.replaceChars.longMonths[this.getMonth()]; },
    m: function() { return (this.getMonth() < 9 ? '0' : '') + (this.getMonth() + 1); },
    M: function() { return Date.replaceChars.shortMonths[this.getMonth()]; },
    //n: function() { return this.getMonth() + 1; },
    //t: function() { var d = new Date(); return new Date(d.getFullYear(), d.getMonth(), 0).getDate() },

    // Year
    //L: function() { var year = this.getFullYear(); return (year % 400 == 0 || (year % 100 != 0 && year % 4 == 0)); },
    //o: function() { var d  = new Date(this.valueOf());  d.setDate(d.getDate() - ((this.getDay() + 6) % 7) + 3); return d.getFullYear();},
    Y: function() { return this.getFullYear(); },
    //y: function() { return ('' + this.getFullYear()).substr(2); },

    // Time
    /*
    a: function() { return this.getHours() < 12 ? 'am' : 'pm'; },
    A: function() { return this.getHours() < 12 ? 'AM' : 'PM'; },
    B: function() { return Math.floor((((this.getUTCHours() + 1) % 24) + this.getUTCMinutes() / 60 + this.getUTCSeconds() / 3600) * 1000 / 24); },
    g: function() { return this.getHours() % 12 || 12; },
    G: function() { return this.getHours(); },
    h: function() { return ((this.getHours() % 12 || 12) < 10 ? '0' : '') + (this.getHours() % 12 || 12); },
    H: function() { return (this.getHours() < 10 ? '0' : '') + this.getHours(); },
    i: function() { return (this.getMinutes() < 10 ? '0' : '') + this.getMinutes(); },
    s: function() { return (this.getSeconds() < 10 ? '0' : '') + this.getSeconds(); },
    u: function() { var m = this.getMilliseconds(); return (m < 10 ? '00' : (m < 100 ? '0' : '')) + m; },
    // Timezone
    e: function() { return "Not Yet Supported"; },
    I: function() {
        var DST = null;
        for (var i = 0; i < 12; ++i) {
            var d = new Date(this.getFullYear(), i, 1);
            var offset = d.getTimezoneOffset();
            if (DST === null){
                DST = offset;
            } else if (offset < DST) {
                DST = offset; break;
            } else if (offset > DST){
                break;
            }
        }
        return (this.getTimezoneOffset() == DST) | 0;
    },
    O: function() { return (-this.getTimezoneOffset() < 0 ? '-' : '+') + (Math.abs(this.getTimezoneOffset() / 60) < 10 ? '0' : '') + (Math.abs(this.getTimezoneOffset() / 60)) + '00'; },
    P: function() { return (-this.getTimezoneOffset() < 0 ? '-' : '+') + (Math.abs(this.getTimezoneOffset() / 60) < 10 ? '0' : '') + (Math.abs(this.getTimezoneOffset() / 60)) + ':00'; },
    T: function() { var m = this.getMonth(); this.setMonth(0); var result = this.toTimeString().replace(/^.+ \(?([^\)]+)\)?$/, '$1'); this.setMonth(m); return result;},
    Z: function() { return -this.getTimezoneOffset() * 60; },

    // Full Date/Time
    c: function() { return this.format("Y-m-d\\TH:i:sP"); },
    r: function() { return this.toString(); },
    U: function() { return this.getTime() / 1000; }
    */
};

var answers = [];

// page and survey control
$(document).ready(function(){

    var surveyStep = 1;
    var evalStep = 1;
    var numQ = $('.questionStep').length;
    var numEval = $('.evalTitle').length;
    var fadeTime = 500;
    var analyticsLoaded = false;
    var gaCheck = 0;
    var ua = String(navigator.userAgent);
    var isMobile = (/android|bada|blackberry|blazer|bolt|doris|dorothy|fennec|gobrowser|iemobile|iphone|ipod|iris|kindle|maemo|midp|minimo|netfront|opera mini|opera mobi|semc|silk|symbian|webos/i.test(ua.toLowerCase()));
    var device = 'PC';
        device = (ua.indexOf('Windows Phone') <=0)? device: 'Windows Phone';
        device = (ua.indexOf('Macintosh') <=0)? device: 'Macintosh';
        device = (ua.indexOf('Android') <=0)? device: 'Android';
        device = (ua.indexOf('iPhone') <=0)? device: 'Apple iPhone';
        device = (ua.indexOf('iPod') <=0)? device: 'Apple iPod';
        device = (ua.indexOf('iPad') <=0)? device: 'Apple iPad';
        device = (ua.indexOf('iPod') <=0)? device: 'Apple iPod';
        device = (ua.indexOf('Fire') <=0)? device: 'Amazon Kindle';
    var phone = '';
    if(device == 'Android' && ua.indexOf(' Build') != -1){
        ua = ua.substring(ua.indexOf('('),ua.indexOf(' Build'));
        phone = ua.split(';');
        phone = $.trim(phone[phone.length-1]);
        phone = phone.split('_').join(' ');
    }
    device = (device == 'Android' && phone != '')? device+' '+phone : device;
    var hidden, state, visibilityChange;
    var userSubscribed = false;

    // show/hide everything that needs it.
    $('.headerImage:lt(1)').show();
    //$('.questionStep:lt(1)').show();
    //$('#surveyEval').hide();
    $('.evalTitle').hide();
    $('#loadingImage').hide();
    $('.evalText').hide();
    $('#congratsBox').hide();

	// handle responsive video and youtube/vimeo parameters.
	// only sets the first video to autoplay :)
	autoplay = (autoplayVids == '')? 0 : 1;
	$('iframe, object, embed').wrap('<div class="videoWrapper"></div>');
	$('iframe').each(function(){
		$this = $(this);
		if($this.attr('src').indexOf('youtube') != -1){
			src = $this.attr('src');
			src = src.replace('?feature=oembed','?autoplay='+autoplay+'&hd=1&rel=0&fs=0&autohide=1&controls=2&modestbranding=1');
			$this.attr('src',src);
            $this.removeAttr('width').removeAttr('height');
		}
		if($this.attr('src').indexOf('vimeo') != -1){
			src = $this.attr('src');
			src += '?title=0&byline=0&portrait=0&autoplay='+autoplay;
			$this.attr('src',src);
            $this.removeAttr('width').removeAttr('height');
		}
		autoplay = 0;
	});

    // if there's any audio in the acceptance box, make sure it doesn't play
    if(isMobile || device == 'iPad'){
        $('audio[autoplay]').remove();
    }
    audios = document.getElementsByTagName('audio');
    for(x = 0; x < audios.length; x++){
        if(audios[x].hasAttribute('data-autoplay')){
            audios[x].pause();
        }
    }
    $('#surveyEnd audio').addClass('end-audio');
    $("#headerContent audio").addClass('start-audio');
    audios = document.querySelectorAll('.start-audio');
    for(x = 0; x < audios.length; x++){
        if(audios[x].hasAttribute('data-autoplay')){
            audios[x].play();
        }
    }

    // populate geolocation tags and background map
    /*
    $('.psc-ip').html(geoData.ip);
    $('.psc-country-code').html(geoData.countryCode);
    $('.psc-country').html(geoData.countryName);
    $('.psc-region-code').html(geoData.regionCode);
    $('.psc-region').html(geoData.regionName);
    $('.psc-city').html(geoData.city);
    $('.psc-area-code').html(geoData.areaCode);
    $('.psc-lat').html(geoData.latitude);
    $('.psc-long').html(geoData.longitude);

    mapImg = '//maps.googleapis.com/maps/api/staticmap?center='+
             geoData.latitude+','+geoData.longitude+
             '&zoom=8&size=640x640&sensor=true&scale=2&maptype=roadmap';
    $('img.map-bg').attr('src',mapImg);
    
    $.ajax({
        dataType: 'jsonp',
        crossDomain : true,
        url: '//freegeoip.net/json/'
    }) 
    .done(function(geoData){

        $('.psc-country-code').html(geoData.country_code);
        $('.psc-country').html(geoData.country_name);
        $('.psc-region-code').html(geoData.region_code);
        $('.psc-region').html(geoData.region_name);
        $('.psc-city').html(geoData.city);
        $('.psc-area-code').html(geoData.area_code);
        $('.psc-lat').html(geoData.latitude);
        $('.psc-long').html(geoData.longitude);

        mapImg = '//maps.googleapis.com/maps/api/staticmap?center='+
                 geoData.latitude+','+geoData.longitude+
                 '&zoom=8&size=640x640&sensor=true&scale=2&maptype=roadmap';
        $('img.map-bg').attr('src',mapImg);

        if($('.match-map').length > 0){
            $('.match-map').each(function(){
                $this = $(this);
                numMarkers = $this.data('markers');
                numMarkers = (numMarkers == '')? 30 : numMarkers;
                numMarkers = (numMarkers > 70)? 70 : numMarkers;
                baseImg  = 'https://maps.googleapis.com/maps/api/staticmap?center=';
                baseImg += geoData.latitude+','+geoData.longitude;
                baseImg += '&zoom=14&size=640x360&maptype=roadmap';
                for(i = 0; i < numMarkers; i++){
                    marker = randomLatLong(geoData);
                    baseImg += '&markers='+marker.latitude+','+marker.longitude;
                }
                $this.attr('src',baseImg);
            });
        }
    })
    .always(function(){}); */

    // populate device
    $('.psc-device').html(device);

    // populate key/value pairs
    for(i = 0; i < query.length; i++){
        $('.'+query[i].key).html(query[i].val);
    } 

    // populate date spans
    $('.psc-date').each(function(){
        $this = $(this);
        $this.html((new Date()).format($this.data('format')));
    });

    // timers and countdowns
    redirTime = parseInt(redirTime)*1000;
    javascript_countdown.init(300);

    // add event listener for mobile opt-in
    if(mobileOptIn){
        if(isMobile){
            $('.optInDesktop').css({'display':'none'});
            $('.optInMobile').css({'display':'block'});
        } else {
            $('.optInDesktop').css({'display':'block'});
            $('.optInMobile').css({'display':'none'});
        }
    }

    // process subIds if we have them
    processSubIds();

    // check for questions. If none, we're an opt-in or a redirect!
    if($('.questionStep').length <= 0){
        $('#questionBox').hide();
        $('#congratsBox').show();
        $('#headerBox').hide();
        handleFinalBox();
        
    }

    // stop image drag
    $('html, body').on('dragstart','img',function(e){
        e.preventDefault();
        e.stopPropagation();
        return false;
    });
    // stop right click
    $('body').on('contextmenu',function(){ return false; });

    $('.stepButton').on('click',function(e){
        e.preventDefault();
        $this = $(this);

        answers.push(
            ($this.hasClass('noBtn'))? 'NO: '+$this.text() : 'YES: '+$this.text()
        );

        barWidth = (surveyStep == numQ)? 101 : surveyStep * (100/numQ);
        $('.progress-bar').animate({'width' : barWidth+'%'});

        if(trackEvents && trackEvents != '' && analyticsLoaded){
            buttonStep = 'Step ' + $this.data('step');
            buttonVal = $this.html();
            buttonType = ($this.hasClass('noBtn'))? 'No Button' : 'Yes Button';
            ga('send', 'event', 'Button Click', buttonStep, buttonType, buttonVal, {'nonInteraction': 1});
        }

        //if($this.hasClass('noBtn') && $this.attr('href') != ''){ // redirect on no!
        if($this.attr('href') != ''){ // redirect or swap?
            if($this.data('swap') == '1'){
                //$('#mobile-subscribe-link').attr('data-target', $this.attr('href'));
                $('#surveyAgree').attr('href', $this.attr('href'));
                cpaUrl = $this.attr('href');
            } else {
                if(popWin){
                    window.open($this.attr('href'));
                } else {
                    document.location = $this.attr('href');
                }
                return false;
            }
        }

        if($this.data('step') < numQ){ // there are more questions
            if($('#q'+(surveyStep+1)+'-image').length > 0){ // if there's an image to show, show it
                $('#q'+surveyStep+'-image').fadeOut(function(){
                    $('#q'+(surveyStep+1)+'-image').fadeIn();
                });
            }
            $('#step'+surveyStep).fadeOut(function(){ // fade out current question, fade in next one
                surveyStep++;
                $('#step'+surveyStep).fadeIn();
                $('#headline').hide();
                $('#conteudo').hide();
                $('#imageBox').hide();
            });
        } else { // done with questions time for the eval spoof
            $('#step'+surveyStep).fadeOut(function(){
                if(numEval > 0){
                    $('#surveyEval h3:eq(0), #surveyEval aside:eq(0), #loadingImage').show();
                    $('#surveyEval').fadeIn(function(){
                        $('#questionBox').hide();
                        setTimeout(function(){ showEvals(); }, fadeTime);
                    });
                } else {
                    handleFinalBox();
                }
            });
        }
    });

    $('#surveyAgree').off('click').on('click',function(){
        $this = $(this);
        if(trackEvents && trackEvents != '' && analyticsLoaded){
            ga('send', 'event', 'Button Click', 'Survey End', 'Final Button', $this.html(), {'nonInteraction': 1});
        }
        if(popWin){
            window.open($this.attr('href'));
        } else {
            document.location = $this.attr('href');
        }
    });

    $('#mobile-subscribe-link').off('click').on('click',function(){
        userSubscribed = true;
        $this = $(this);
        if(trackEvents && trackEvents != '' && analyticsLoaded){
            ga('send', 'event', 'Button Click', 'Mobile Opt-In', 'Final Button', $this.html(), {'nonInteraction': 1});
        }
        document.location = $this.attr('href');
        cpaUrl = $this.data('target');
        setTimeout(function(){
            document.location = cpaUrl;
        },2250);
    });

    $('.fb-share').off('click').on('click',function(e){
        e.preventDefault();
        var sTop = window.screen.height/2-(218);
        var sLeft = window.screen.width/2-(313);
        var shareLink = $('meta[property="og:url"]').attr('content');
        window.open(
            'https://www.facebook.com/sharer/sharer.php?u='+shareLink,
            'sharer',
            'toolbar=0,status=0,width=580,height=400,top='+sTop+',left='+sLeft
        );
    });

    // make menu links pop a new tab
    $('nav#psc-menu-nav a').attr('target','_blank');

    function showEvals(){
        if(evalStep < numEval){
            $('#pss'+evalStep+'-title').fadeOut(function(){
                evalStep++;
                fadeTime += 150;
                $('#pss'+evalStep+'-title').fadeIn(function(){
                    setTimeout(function(){
                        showEvals();
                    }, fadeTime);
                });
            });
            $('#pss'+evalStep+'-text').fadeOut(function(){
                $('#pss'+evalStep+'-text').fadeIn();
            });
        } else {
            $('#surveyEval').fadeOut(function(){
                handleFinalBox();
            });
        }
    }

    function handleFinalBox(){
        $('#congratsBox').fadeIn(function(){
            $('#headerBox').hide();
            $('#questionBox').hide();
            $('#surveyEval').hide();
            //if($('#surveyAgree').length > 0){
            if(cpaUrl.length > 0 && $('#surveyOptIn').length <= 0){
                setTimeout(function(){
                    if(popWin){
                        window.open(cpaUrl);
                    } else {
                        document.location = cpaUrl;
                    }
                },parseInt(redirTime));
            }//woot woot
            // if we have audio tags in the congrats box that are autoplay, play em.
            audios = document.querySelectorAll('.end-audio');
            for(x = 0; x < audios.length; x++){
                if(audios[x].hasAttribute('data-autoplay')){
                    audios[x].play();
                }
            }
        });
    }

    function checkIfAnalyticsLoaded() {
        if(window.ga){
            analyticsLoaded = true;
        } else {
            gaCheck++;
            analyticsLoaded = false;
            if(gaCheck < 5){
                setTimeout(function(){ checkIfAnalyticsLoaded(); }, 250);
            }
        }
    }

    function randomRange(min,max){
        return Math.floor(Math.random()*(max-min+1)+min);
    }

    function getCoordDelta(res){
        return (randomRange(0,1))? randomRange(1,1000)/res : -randomRange(1,1000)/res;
    }

    function trimCoord(v){
        v = String(v).split('.');
        v[1] = (String(v[1]).length >= 6)? v[1].substring(0,5) : v[1];
        return v[0]+'.'+v[1];
    }

    function randomLatLong(geoData){
        latDelta = getCoordDelta(100000);
        longDelta = getCoordDelta(40000);
        return {
            "latitude" : trimCoord(geoData.latitude+latDelta),
            "longitude" : trimCoord(geoData.longitude+longDelta)
        };
    }

    setTimeout(function(){ checkIfAnalyticsLoaded(); }, 250);
});